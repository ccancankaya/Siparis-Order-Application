<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ımageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 5</value>
  </metadata>
  <data name="ımageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACq
        CAAAAk1TRnQBSQFMAgEBAgEAAUABAAFAAQABIwEAASMBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAGM
        AwABIwMAAQEBAAEgBQABkAFM9gADAgEDA6MB8CT/A4sB6f8A/wACAAO8AfYDjwHqAyYBOQMkATUDJAE1
        AyQBNQMkATUDJAE1AyQBNQMkATUDJwE7A9AB+QOLAen/AOEAAwQBBQMWAR8DFwEgAwQBBQwABP8DHQEq
        JAADKAE8BP//ACkAbP8DwAH3OAADDgETA0oBjAPXAfsY/wNCAXQEAAT/AxkBIwwAAwoBDQMLAQ8QAAMm
        ATgE//8AKQBs/wNkAc8wAAMUARsDcgHaBP8D0AH5A1kBuAMvAUoDAQECCAADAwEEAzEBTgMyAVEEAAT/
        AxkBIwgAAywBQwj/AwYBCAwAAyYBOAT//wApAAPnAf1o/wM/AWwsAANMAY8E/wOjAfADHwEtKAAE/wMZ
        ASMEAANRAZwE/wNjAcoDxQH3BP8DAgEDCAADJgE4BP//ACkAAz0BZ2j/AwkBDCgAA9AB+QT/AzsBZDAA
        BP8DGQEjBAADbQHWAzUBVQgAA+oB/QOWAesIAAMmATgE//8AKQADAQECA3YB4WD/AzoBYCgAA48B6gT/
        AxUBHTQABP8DGQEjFAADCAELBP8DWQG4BAADJgE4BP//ADEAA1UBtRj/A+cB/QNYAbkDBwEJEAADJAE2
        A4IB5hj/A8AB9wMsAUQoAANUAawE/wMOARM4AAT/AxkBIxgAAyMBNAT/A0oBiQMmATgE//8ANQADEAEW
        A0oBigz/A5oB8AMQARYgAAMyAVEM/wOPAewDMgFQLAADJgE5BP8DMAFLPAAE/wMZASMcAAM5AV8DBAEG
        AyYBOAT//wBBAAMMARADSAGEAwABAQgAAyABLwNSAakDwwH4A3oB5ANAAXEDDAEQCAADEwEaAzgBXTgA
        A7gB9QNmAdFAAAT/AxwBJyQAAycBOgT//wBRAANyAd4U/wPXAfwDOgFgQAADMQFNBP8DBAEGQAAD0AH5
        A2gB0gMcAScDGAEiAxgBIgMYASIDGAEiAxgBIgMYASIDGAEiAx0BKQOPAeoDnQHv/wBRAAPvAf4Y/wMZ
        ASNAAANyAdoDZgHORAADEgEYA9AB+ST/A7gB9QMDAQT/AFEAA+8B/hj/AwABAUAABP8DNAFU/wDJAAPv
        Af4Y/wMAAQE8AAMeASsE/wMAAQH/AMUAAzYBWCD/AwUBBzgAA0UBfAT//wDFAAMEAQYk/wNiAdA4AANW
        Aa8E//8AxQADYgHQKP8DEAEVNAADWQG3A7wB9v8AwQADLgFIA+cB/Sj/A4UB6AMGAQgwAANQAZ0E/2gA
        AxUBHQMDAQT/AFEANP8DTgGWMAADOgFhBP9fAAEBAyYBOQPcAfwE/wNUAab/AFEANP8DbgHfMAADBgEI
        BP8DCgENVAADVwG0CP8DrQHyCP//AFEAA2IB0zD/AzABSzQABP8DSAGDTAADKQE/CP8DRAF7AwYBCANO
        AZQI/wM/AW3/AE0ANP8DRgF+NAADVQGwA7YB9E8AAQEDIAEuDAADvAH2A1MBqgNZAbsDowHw/wBNADT/
        A3IB3jQAAxABFgT/AywBRFgAAyMBNAT/AxIBGAMXASAE/wMVAR3/AEkANP8DwwH4OAADXwHDA7YB9FQA
        AwIBAwT/A2MBywgAA6wB8gNbAb3/AEkANP8DZAHSOAADBgEIBP8DXgHHUAADXAG+BP8DBQEHCAADBAEG
        AwABAf8ASQA0/wNCAXM8AAMkATYE/wNKAYtIAANHAYAE/wMYASH/AF0AA0wBkzD/AxABFUAAAzEBTgT/
        A1cBtEAAA1QBrAT/AzoBYv8AYQADCQEMA8oB+Sj/A0IBdEgAAyQBNQT/A6MB8AMLAQ8wAAMHAQkDoAHw
        BP8DLQFF/wBpAAMPARQDygH5HP8DOQFfAwcBCVAAAw8BFAOWAewE/wNmAdADHQEpIAADHAEnA2YB0AT/
        A5YB7AMSARj/AHEAAwoBDQNOAZYU/wMtAUVgAAMuAUcDlgHrCP8DbQHWA1QBpgNKAYwDSgGNA1QBpgNs
        AdUI/wOdAe8DLgFH/wD/AAIAAwcBCgNCAXUDXAG+A48B6gj/A5YB7ANdAcADRAF5AwQBBv8A/wD/AP8A
        /wD/AP8A4wABQgFNAT4HAAE+AwABKAMAAYwDAAEjAwABAQEAAQEFAAG8AQIWAAP/AQAH/wGAAQQLAAf/
        AYAMAAb/AcMBnwHwCwAB8AMAAf8B/AEAAZwB8AsAAfADAAH/AfABGAGYAXALAAHwAwAB/wHhAf8BkAEw
        CwAB8AMAAf8BxwH/AZMBMAsAAfACAAEBAf8BjwH/AZ8BEAsAAfwBAAHwAQMB/wEfAf8BnwGACwAB/gED
        AfwBDwH+AT8B/wGfAcALAAH/AcYBBgF/Af4BfwH/AZ8B8AsAAf8B/AEDAf8B/AF/Af8BgAwAAf8B/AED
        Af8B/AL/AYAMAAH/AfwBAwH/AfwD/wH8CwAB/wH8AQMB/wH4A/8B/AsAAf8B+AEBAf8B+QP/AfwLAAH/
        AfABAQH/AfkD/wH8CwAB/wHwAQAB/wH5A/8B/AsAAf8B4AEAAX8B+QP/AZwLAAH/AeABAAF/AfkC/wH8
        ARwLAAH/AeABAAF/AfgC/wH4ARwLAAH/AeABAAF/AfwC/wHgAQwLAAH/AeABAAF/AfwC/wHnAQwLAAH/
        AeABAAF/AfwBfwH/Af4BBAsAAf8B4AEAAX8B/gF/Af8B/AFkCwAB/wHgAQABfwH+AT8B/wH8AWQLAAH/
        AeABAAF/Af8BHwH/AfgB/AsAAf8B4AEAAX8B/wGPAf8B8QH8CwAB/wHgAQAC/wHDAf8BwwH8CwAB/wHw
        AQEC/wHgAf8BBwH8CwAB/wH4AQcC/wH4AQABHwH8CwAF/wH+AQABfwH8CwAI/wH8CwAI/wH8CwAI/wH8
        CwAL
</value>
  </data>
</root>